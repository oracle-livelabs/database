{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "awful-brother",
   "metadata": {},
   "source": [
    "# OCI Data Science - Fish Survey\n",
    "\n",
    "This is your Jupyter Notebook to make all the magic."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "surgical-decrease",
   "metadata": {},
   "source": [
    "### Import the libraries you need"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "suited-excuse",
   "metadata": {},
   "outputs": [],
   "source": [
    "import mysql.connector\n",
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "sns.set_theme(style=\"whitegrid\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "second-columbus",
   "metadata": {},
   "source": [
    "### Create the connection with MySQL Database Service\n",
    "\n",
    "**REMEMBER:** Change the `PRIVATE_IP` before run."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "pleasant-macro",
   "metadata": {},
   "outputs": [],
   "source": [
    "cnx = mysql.connector.connect(\n",
    "  host=\"PRIVATE_IP\",\n",
    "  user=\"root\",\n",
    "  passwd=\"R2d2&C3po!\",\n",
    "  database=\"nature\"\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "unlimited-profile",
   "metadata": {},
   "source": [
    "### Read data from MySQL"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "celtic-integration",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_sql('SELECT * FROM fish', con=cnx)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "nearby-hunter",
   "metadata": {},
   "source": [
    "### How the data looks like"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "posted-atlas",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "athletic-wagner",
   "metadata": {},
   "source": [
    "### TODO, clean this data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "retired-delivery",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.total = pd.to_numeric(df.total, errors='coerce').fillna(0).astype(np.int64)\n",
    "df.depth = pd.to_numeric(df.depth, errors='coerce').fillna(0).astype(np.int64)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "classical-frank",
   "metadata": {},
   "source": [
    "### Plot some data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "greenhouse-jamaica",
   "metadata": {},
   "outputs": [],
   "source": [
    "f, ax = plt.subplots(figsize=(6.5, 6.5))\n",
    "sns.despine(f, left=True, bottom=True)\n",
    "clarity_ranking = [\"I1\", \"SI2\", \"SI1\", \"VS2\", \"VS1\", \"VVS2\", \"VVS1\", \"IF\"]\n",
    "sns.scatterplot(x=\"total\", y=\"depth\",\n",
    "                hue=\"total\", size=\"depth\",\n",
    "                palette=\"ch:r=-.2,d=.3_r\",\n",
    "                hue_order=clarity_ranking,\n",
    "                sizes=(1, 8), linewidth=0,\n",
    "                data=df, ax=ax);"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "documentary-presence",
   "metadata": {},
   "source": [
    "# Time to think about what data you want to use"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}